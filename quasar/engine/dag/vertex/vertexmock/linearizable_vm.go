// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/luxfi/node/quasar/engine/dag/vertex (interfaces: LinearizableVM)
//
// Generated by this command:
//
//	mockgen -package=vertexmock -destination=vertexmock/linearizable_vm.go -mock_names=LinearizableVM=LinearizableVM . LinearizableVM
//

// Package vertexmock is a generated GoMock package.
package vertexmock

import (
	context "context"
	reflect "reflect"

	vertex "github.com/luxfi/node/quasar/engine/dag/vertex"
	gomock "go.uber.org/mock/gomock"
)

// LinearizableVM is a mock of LinearizableVM interface.
type LinearizableVM struct {
	ctrl     *gomock.Controller
	recorder *LinearizableVMMockRecorder
	isgomock struct{}
}

// LinearizableVMMockRecorder is the mock recorder for LinearizableVM.
type LinearizableVMMockRecorder struct {
	mock *LinearizableVM
}

// NewLinearizableVM creates a new mock instance.
func NewLinearizableVM(ctrl *gomock.Controller) *LinearizableVM {
	mock := &LinearizableVM{ctrl: ctrl}
	mock.recorder = &LinearizableVMMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *LinearizableVM) EXPECT() *LinearizableVMMockRecorder {
	return m.recorder
}

// BuildVertex mocks base method.
func (m *LinearizableVM) BuildVertex(arg0 context.Context) (vertex.Vertex, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildVertex", arg0)
	ret0, _ := ret[0].(vertex.Vertex)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BuildVertex indicates an expected call of BuildVertex.
func (mr *LinearizableVMMockRecorder) BuildVertex(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildVertex", reflect.TypeOf((*LinearizableVM)(nil).BuildVertex), arg0)
}

// ParseVertex mocks base method.
func (m *LinearizableVM) ParseVertex(arg0 context.Context, arg1 []byte) (vertex.Vertex, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseVertex", arg0, arg1)
	ret0, _ := ret[0].(vertex.Vertex)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseVertex indicates an expected call of ParseVertex.
func (mr *LinearizableVMMockRecorder) ParseVertex(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseVertex", reflect.TypeOf((*LinearizableVM)(nil).ParseVertex), arg0, arg1)
}
