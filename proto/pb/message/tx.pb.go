// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: message/tx.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*Message_Tx
	Message       isMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_message_tx_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_tx_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_tx_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetMessage() isMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Message) GetTx() *Tx {
	if x != nil {
		if x, ok := x.Message.(*Message_Tx); ok {
			return x.Tx
		}
	}
	return nil
}

type isMessage_Message interface {
	isMessage_Message()
}

type Message_Tx struct {
	Tx *Tx `protobuf:"bytes,1,opt,name=tx,proto3,oneof"`
}

func (*Message_Tx) isMessage_Message() {}

type Tx struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The byte representation of this transaction.
	Tx            []byte `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tx) Reset() {
	*x = Tx{}
	mi := &file_message_tx_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_message_tx_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_message_tx_proto_rawDescGZIP(), []int{1}
}

func (x *Tx) GetTx() []byte {
	if x != nil {
		return x.Tx
	}
	return nil
}

var File_message_tx_proto protoreflect.FileDescriptor

const file_message_tx_proto_rawDesc = "" +
	"\n" +
	"\x10message/tx.proto\x12\amessage\"3\n" +
	"\aMessage\x12\x1d\n" +
	"\x02tx\x18\x01 \x01(\v2\v.message.TxH\x00R\x02txB\t\n" +
	"\amessage\"\x14\n" +
	"\x02Tx\x12\x0e\n" +
	"\x02tx\x18\x01 \x01(\fR\x02txB(Z&github.com/luxfi/node/proto/pb/messageb\x06proto3"

var (
	file_message_tx_proto_rawDescOnce sync.Once
	file_message_tx_proto_rawDescData []byte
)

func file_message_tx_proto_rawDescGZIP() []byte {
	file_message_tx_proto_rawDescOnce.Do(func() {
		file_message_tx_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_message_tx_proto_rawDesc), len(file_message_tx_proto_rawDesc)))
	})
	return file_message_tx_proto_rawDescData
}

var file_message_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_message_tx_proto_goTypes = []any{
	(*Message)(nil), // 0: message.Message
	(*Tx)(nil),      // 1: message.Tx
}
var file_message_tx_proto_depIdxs = []int32{
	1, // 0: message.Message.tx:type_name -> message.Tx
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_message_tx_proto_init() }
func file_message_tx_proto_init() {
	if File_message_tx_proto != nil {
		return
	}
	file_message_tx_proto_msgTypes[0].OneofWrappers = []any{
		(*Message_Tx)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_message_tx_proto_rawDesc), len(file_message_tx_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_tx_proto_goTypes,
		DependencyIndexes: file_message_tx_proto_depIdxs,
		MessageInfos:      file_message_tx_proto_msgTypes,
	}.Build()
	File_message_tx_proto = out.File
	file_message_tx_proto_goTypes = nil
	file_message_tx_proto_depIdxs = nil
}
