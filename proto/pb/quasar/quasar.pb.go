// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: quasar/quasar.proto

package quasar

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// QuasarFinalityCertificate represents the dual-signature finality certificate
type QuasarFinalityCertificate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BlockId         []byte                 `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`                           // Unique identifier of the block (hash)
	BlockHeight     uint64                 `protobuf:"varint,2,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`              // Height or sequence number of the block
	Epoch           uint32                 `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`                                             // Ringtail key epoch or version used for this cert
	BlsAggregateSig []byte                 `protobuf:"bytes,4,opt,name=bls_aggregate_sig,json=blsAggregateSig,proto3" json:"bls_aggregate_sig,omitempty"` // Aggregated BLS signature for the block
	RingtailSig     []byte                 `protobuf:"bytes,5,opt,name=ringtail_sig,json=ringtailSig,proto3" json:"ringtail_sig,omitempty"`               // Final Ringtail threshold signature for the block
	SignerIds       []uint32               `protobuf:"varint,6,rep,packed,name=signer_ids,json=signerIds,proto3" json:"signer_ids,omitempty"`             // List of validator IDs who signed
	Timestamp       uint64                 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                     // Timestamp when certificate was created
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QuasarFinalityCertificate) Reset() {
	*x = QuasarFinalityCertificate{}
	mi := &file_quasar_quasar_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuasarFinalityCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuasarFinalityCertificate) ProtoMessage() {}

func (x *QuasarFinalityCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_quasar_quasar_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuasarFinalityCertificate.ProtoReflect.Descriptor instead.
func (*QuasarFinalityCertificate) Descriptor() ([]byte, []int) {
	return file_quasar_quasar_proto_rawDescGZIP(), []int{0}
}

func (x *QuasarFinalityCertificate) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *QuasarFinalityCertificate) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *QuasarFinalityCertificate) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *QuasarFinalityCertificate) GetBlsAggregateSig() []byte {
	if x != nil {
		return x.BlsAggregateSig
	}
	return nil
}

func (x *QuasarFinalityCertificate) GetRingtailSig() []byte {
	if x != nil {
		return x.RingtailSig
	}
	return nil
}

func (x *QuasarFinalityCertificate) GetSignerIds() []uint32 {
	if x != nil {
		return x.SignerIds
	}
	return nil
}

func (x *QuasarFinalityCertificate) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// QuasarPartialSig represents a validator's partial signature contribution
type QuasarPartialSig struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BlockId            []byte                 `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	ValidatorId        uint32                 `protobuf:"varint,2,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"`
	BlsSigShare        []byte                 `protobuf:"bytes,3,opt,name=bls_sig_share,json=blsSigShare,proto3" json:"bls_sig_share,omitempty"`                    // This validator's BLS signature on block
	RingtailCommitment []byte                 `protobuf:"bytes,4,opt,name=ringtail_commitment,json=ringtailCommitment,proto3" json:"ringtail_commitment,omitempty"` // Round 1 data for Ringtail (if applicable)
	RingtailSigShare   []byte                 `protobuf:"bytes,5,opt,name=ringtail_sig_share,json=ringtailSigShare,proto3" json:"ringtail_sig_share,omitempty"`     // Round 2 data: the validator's Ringtail signature share
	Timestamp          uint64                 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *QuasarPartialSig) Reset() {
	*x = QuasarPartialSig{}
	mi := &file_quasar_quasar_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuasarPartialSig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuasarPartialSig) ProtoMessage() {}

func (x *QuasarPartialSig) ProtoReflect() protoreflect.Message {
	mi := &file_quasar_quasar_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuasarPartialSig.ProtoReflect.Descriptor instead.
func (*QuasarPartialSig) Descriptor() ([]byte, []int) {
	return file_quasar_quasar_proto_rawDescGZIP(), []int{1}
}

func (x *QuasarPartialSig) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *QuasarPartialSig) GetValidatorId() uint32 {
	if x != nil {
		return x.ValidatorId
	}
	return 0
}

func (x *QuasarPartialSig) GetBlsSigShare() []byte {
	if x != nil {
		return x.BlsSigShare
	}
	return nil
}

func (x *QuasarPartialSig) GetRingtailCommitment() []byte {
	if x != nil {
		return x.RingtailCommitment
	}
	return nil
}

func (x *QuasarPartialSig) GetRingtailSigShare() []byte {
	if x != nil {
		return x.RingtailSigShare
	}
	return nil
}

func (x *QuasarPartialSig) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// QuasarKeyRotation represents a key rotation announcement
type QuasarKeyRotation struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ValidatorId          uint32                 `protobuf:"varint,1,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"`
	NewBlsPublicKey      []byte                 `protobuf:"bytes,2,opt,name=new_bls_public_key,json=newBlsPublicKey,proto3" json:"new_bls_public_key,omitempty"`
	NewRingtailPublicKey []byte                 `protobuf:"bytes,3,opt,name=new_ringtail_public_key,json=newRingtailPublicKey,proto3" json:"new_ringtail_public_key,omitempty"`
	EffectiveEpoch       uint32                 `protobuf:"varint,4,opt,name=effective_epoch,json=effectiveEpoch,proto3" json:"effective_epoch,omitempty"`
	OldKeySignature      []byte                 `protobuf:"bytes,5,opt,name=old_key_signature,json=oldKeySignature,proto3" json:"old_key_signature,omitempty"` // Signed by old key to prove ownership
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *QuasarKeyRotation) Reset() {
	*x = QuasarKeyRotation{}
	mi := &file_quasar_quasar_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuasarKeyRotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuasarKeyRotation) ProtoMessage() {}

func (x *QuasarKeyRotation) ProtoReflect() protoreflect.Message {
	mi := &file_quasar_quasar_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuasarKeyRotation.ProtoReflect.Descriptor instead.
func (*QuasarKeyRotation) Descriptor() ([]byte, []int) {
	return file_quasar_quasar_proto_rawDescGZIP(), []int{2}
}

func (x *QuasarKeyRotation) GetValidatorId() uint32 {
	if x != nil {
		return x.ValidatorId
	}
	return 0
}

func (x *QuasarKeyRotation) GetNewBlsPublicKey() []byte {
	if x != nil {
		return x.NewBlsPublicKey
	}
	return nil
}

func (x *QuasarKeyRotation) GetNewRingtailPublicKey() []byte {
	if x != nil {
		return x.NewRingtailPublicKey
	}
	return nil
}

func (x *QuasarKeyRotation) GetEffectiveEpoch() uint32 {
	if x != nil {
		return x.EffectiveEpoch
	}
	return 0
}

func (x *QuasarKeyRotation) GetOldKeySignature() []byte {
	if x != nil {
		return x.OldKeySignature
	}
	return nil
}

// QuasarMisbehaviorEvidence represents evidence of validator misbehavior
type QuasarMisbehaviorEvidence struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BlockId              []byte                 `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	OffenderId           uint32                 `protobuf:"varint,2,opt,name=offender_id,json=offenderId,proto3" json:"offender_id,omitempty"`
	BlsSignature         []byte                 `protobuf:"bytes,3,opt,name=bls_signature,json=blsSignature,proto3" json:"bls_signature,omitempty"`                           // Offender's BLS signature on the block
	MissingRingtailShare []byte                 `protobuf:"bytes,4,opt,name=missing_ringtail_share,json=missingRingtailShare,proto3" json:"missing_ringtail_share,omitempty"` // Empty if not provided
	InvalidRingtailShare []byte                 `protobuf:"bytes,5,opt,name=invalid_ringtail_share,json=invalidRingtailShare,proto3" json:"invalid_ringtail_share,omitempty"` // If provided but found invalid
	WitnessSigs          [][]byte               `protobuf:"bytes,6,rep,name=witness_sigs,json=witnessSigs,proto3" json:"witness_sigs,omitempty"`                              // Signatures from witnesses
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *QuasarMisbehaviorEvidence) Reset() {
	*x = QuasarMisbehaviorEvidence{}
	mi := &file_quasar_quasar_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuasarMisbehaviorEvidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuasarMisbehaviorEvidence) ProtoMessage() {}

func (x *QuasarMisbehaviorEvidence) ProtoReflect() protoreflect.Message {
	mi := &file_quasar_quasar_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuasarMisbehaviorEvidence.ProtoReflect.Descriptor instead.
func (*QuasarMisbehaviorEvidence) Descriptor() ([]byte, []int) {
	return file_quasar_quasar_proto_rawDescGZIP(), []int{3}
}

func (x *QuasarMisbehaviorEvidence) GetBlockId() []byte {
	if x != nil {
		return x.BlockId
	}
	return nil
}

func (x *QuasarMisbehaviorEvidence) GetOffenderId() uint32 {
	if x != nil {
		return x.OffenderId
	}
	return 0
}

func (x *QuasarMisbehaviorEvidence) GetBlsSignature() []byte {
	if x != nil {
		return x.BlsSignature
	}
	return nil
}

func (x *QuasarMisbehaviorEvidence) GetMissingRingtailShare() []byte {
	if x != nil {
		return x.MissingRingtailShare
	}
	return nil
}

func (x *QuasarMisbehaviorEvidence) GetInvalidRingtailShare() []byte {
	if x != nil {
		return x.InvalidRingtailShare
	}
	return nil
}

func (x *QuasarMisbehaviorEvidence) GetWitnessSigs() [][]byte {
	if x != nil {
		return x.WitnessSigs
	}
	return nil
}

// QuasarDoubleSignEvidence represents evidence of double-signing
type QuasarDoubleSignEvidence struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	OffenderId         uint32                 `protobuf:"varint,1,opt,name=offender_id,json=offenderId,proto3" json:"offender_id,omitempty"`
	BlockId_1          []byte                 `protobuf:"bytes,2,opt,name=block_id_1,json=blockId1,proto3" json:"block_id_1,omitempty"`
	BlockId_2          []byte                 `protobuf:"bytes,3,opt,name=block_id_2,json=blockId2,proto3" json:"block_id_2,omitempty"`
	BlsSig_1           []byte                 `protobuf:"bytes,4,opt,name=bls_sig_1,json=blsSig1,proto3" json:"bls_sig_1,omitempty"`
	BlsSig_2           []byte                 `protobuf:"bytes,5,opt,name=bls_sig_2,json=blsSig2,proto3" json:"bls_sig_2,omitempty"`
	RingtailSigShare_1 []byte                 `protobuf:"bytes,6,opt,name=ringtail_sig_share_1,json=ringtailSigShare1,proto3" json:"ringtail_sig_share_1,omitempty"`
	RingtailSigShare_2 []byte                 `protobuf:"bytes,7,opt,name=ringtail_sig_share_2,json=ringtailSigShare2,proto3" json:"ringtail_sig_share_2,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *QuasarDoubleSignEvidence) Reset() {
	*x = QuasarDoubleSignEvidence{}
	mi := &file_quasar_quasar_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuasarDoubleSignEvidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuasarDoubleSignEvidence) ProtoMessage() {}

func (x *QuasarDoubleSignEvidence) ProtoReflect() protoreflect.Message {
	mi := &file_quasar_quasar_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuasarDoubleSignEvidence.ProtoReflect.Descriptor instead.
func (*QuasarDoubleSignEvidence) Descriptor() ([]byte, []int) {
	return file_quasar_quasar_proto_rawDescGZIP(), []int{4}
}

func (x *QuasarDoubleSignEvidence) GetOffenderId() uint32 {
	if x != nil {
		return x.OffenderId
	}
	return 0
}

func (x *QuasarDoubleSignEvidence) GetBlockId_1() []byte {
	if x != nil {
		return x.BlockId_1
	}
	return nil
}

func (x *QuasarDoubleSignEvidence) GetBlockId_2() []byte {
	if x != nil {
		return x.BlockId_2
	}
	return nil
}

func (x *QuasarDoubleSignEvidence) GetBlsSig_1() []byte {
	if x != nil {
		return x.BlsSig_1
	}
	return nil
}

func (x *QuasarDoubleSignEvidence) GetBlsSig_2() []byte {
	if x != nil {
		return x.BlsSig_2
	}
	return nil
}

func (x *QuasarDoubleSignEvidence) GetRingtailSigShare_1() []byte {
	if x != nil {
		return x.RingtailSigShare_1
	}
	return nil
}

func (x *QuasarDoubleSignEvidence) GetRingtailSigShare_2() []byte {
	if x != nil {
		return x.RingtailSigShare_2
	}
	return nil
}

// QuasarPrecompRequest represents a request for precomputation status
type QuasarPrecompRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ValidatorId   uint32                 `protobuf:"varint,1,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuasarPrecompRequest) Reset() {
	*x = QuasarPrecompRequest{}
	mi := &file_quasar_quasar_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuasarPrecompRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuasarPrecompRequest) ProtoMessage() {}

func (x *QuasarPrecompRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quasar_quasar_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuasarPrecompRequest.ProtoReflect.Descriptor instead.
func (*QuasarPrecompRequest) Descriptor() ([]byte, []int) {
	return file_quasar_quasar_proto_rawDescGZIP(), []int{5}
}

func (x *QuasarPrecompRequest) GetValidatorId() uint32 {
	if x != nil {
		return x.ValidatorId
	}
	return 0
}

// QuasarPrecompResponse represents precomputation status
type QuasarPrecompResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ValidatorId       uint32                 `protobuf:"varint,1,opt,name=validator_id,json=validatorId,proto3" json:"validator_id,omitempty"`
	AvailablePrecomps uint32                 `protobuf:"varint,2,opt,name=available_precomps,json=availablePrecomps,proto3" json:"available_precomps,omitempty"`
	PrecompRatePerSec uint32                 `protobuf:"varint,3,opt,name=precomp_rate_per_sec,json=precompRatePerSec,proto3" json:"precomp_rate_per_sec,omitempty"`
	LastRotationEpoch uint64                 `protobuf:"varint,4,opt,name=last_rotation_epoch,json=lastRotationEpoch,proto3" json:"last_rotation_epoch,omitempty"`
	NextRotationEpoch uint64                 `protobuf:"varint,5,opt,name=next_rotation_epoch,json=nextRotationEpoch,proto3" json:"next_rotation_epoch,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QuasarPrecompResponse) Reset() {
	*x = QuasarPrecompResponse{}
	mi := &file_quasar_quasar_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuasarPrecompResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuasarPrecompResponse) ProtoMessage() {}

func (x *QuasarPrecompResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quasar_quasar_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuasarPrecompResponse.ProtoReflect.Descriptor instead.
func (*QuasarPrecompResponse) Descriptor() ([]byte, []int) {
	return file_quasar_quasar_proto_rawDescGZIP(), []int{6}
}

func (x *QuasarPrecompResponse) GetValidatorId() uint32 {
	if x != nil {
		return x.ValidatorId
	}
	return 0
}

func (x *QuasarPrecompResponse) GetAvailablePrecomps() uint32 {
	if x != nil {
		return x.AvailablePrecomps
	}
	return 0
}

func (x *QuasarPrecompResponse) GetPrecompRatePerSec() uint32 {
	if x != nil {
		return x.PrecompRatePerSec
	}
	return 0
}

func (x *QuasarPrecompResponse) GetLastRotationEpoch() uint64 {
	if x != nil {
		return x.LastRotationEpoch
	}
	return 0
}

func (x *QuasarPrecompResponse) GetNextRotationEpoch() uint64 {
	if x != nil {
		return x.NextRotationEpoch
	}
	return 0
}

var File_quasar_quasar_proto protoreflect.FileDescriptor

const file_quasar_quasar_proto_rawDesc = "" +
	"\n" +
	"\x13quasar/quasar.proto\x12\x06quasar\"\xfb\x01\n" +
	"\x19QuasarFinalityCertificate\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\fR\ablockId\x12!\n" +
	"\fblock_height\x18\x02 \x01(\x04R\vblockHeight\x12\x14\n" +
	"\x05epoch\x18\x03 \x01(\rR\x05epoch\x12*\n" +
	"\x11bls_aggregate_sig\x18\x04 \x01(\fR\x0fblsAggregateSig\x12!\n" +
	"\fringtail_sig\x18\x05 \x01(\fR\vringtailSig\x12\x1d\n" +
	"\n" +
	"signer_ids\x18\x06 \x03(\rR\tsignerIds\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x04R\ttimestamp\"\xf1\x01\n" +
	"\x10QuasarPartialSig\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\fR\ablockId\x12!\n" +
	"\fvalidator_id\x18\x02 \x01(\rR\vvalidatorId\x12\"\n" +
	"\rbls_sig_share\x18\x03 \x01(\fR\vblsSigShare\x12/\n" +
	"\x13ringtail_commitment\x18\x04 \x01(\fR\x12ringtailCommitment\x12,\n" +
	"\x12ringtail_sig_share\x18\x05 \x01(\fR\x10ringtailSigShare\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x04R\ttimestamp\"\xef\x01\n" +
	"\x11QuasarKeyRotation\x12!\n" +
	"\fvalidator_id\x18\x01 \x01(\rR\vvalidatorId\x12+\n" +
	"\x12new_bls_public_key\x18\x02 \x01(\fR\x0fnewBlsPublicKey\x125\n" +
	"\x17new_ringtail_public_key\x18\x03 \x01(\fR\x14newRingtailPublicKey\x12'\n" +
	"\x0feffective_epoch\x18\x04 \x01(\rR\x0eeffectiveEpoch\x12*\n" +
	"\x11old_key_signature\x18\x05 \x01(\fR\x0foldKeySignature\"\x8b\x02\n" +
	"\x19QuasarMisbehaviorEvidence\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\fR\ablockId\x12\x1f\n" +
	"\voffender_id\x18\x02 \x01(\rR\n" +
	"offenderId\x12#\n" +
	"\rbls_signature\x18\x03 \x01(\fR\fblsSignature\x124\n" +
	"\x16missing_ringtail_share\x18\x04 \x01(\fR\x14missingRingtailShare\x124\n" +
	"\x16invalid_ringtail_share\x18\x05 \x01(\fR\x14invalidRingtailShare\x12!\n" +
	"\fwitness_sigs\x18\x06 \x03(\fR\vwitnessSigs\"\x91\x02\n" +
	"\x18QuasarDoubleSignEvidence\x12\x1f\n" +
	"\voffender_id\x18\x01 \x01(\rR\n" +
	"offenderId\x12\x1c\n" +
	"\n" +
	"block_id_1\x18\x02 \x01(\fR\bblockId1\x12\x1c\n" +
	"\n" +
	"block_id_2\x18\x03 \x01(\fR\bblockId2\x12\x1a\n" +
	"\tbls_sig_1\x18\x04 \x01(\fR\ablsSig1\x12\x1a\n" +
	"\tbls_sig_2\x18\x05 \x01(\fR\ablsSig2\x12/\n" +
	"\x14ringtail_sig_share_1\x18\x06 \x01(\fR\x11ringtailSigShare1\x12/\n" +
	"\x14ringtail_sig_share_2\x18\a \x01(\fR\x11ringtailSigShare2\"9\n" +
	"\x14QuasarPrecompRequest\x12!\n" +
	"\fvalidator_id\x18\x01 \x01(\rR\vvalidatorId\"\xfa\x01\n" +
	"\x15QuasarPrecompResponse\x12!\n" +
	"\fvalidator_id\x18\x01 \x01(\rR\vvalidatorId\x12-\n" +
	"\x12available_precomps\x18\x02 \x01(\rR\x11availablePrecomps\x12/\n" +
	"\x14precomp_rate_per_sec\x18\x03 \x01(\rR\x11precompRatePerSec\x12.\n" +
	"\x13last_rotation_epoch\x18\x04 \x01(\x04R\x11lastRotationEpoch\x12.\n" +
	"\x13next_rotation_epoch\x18\x05 \x01(\x04R\x11nextRotationEpochB'Z%github.com/luxfi/node/proto/pb/quasarb\x06proto3"

var (
	file_quasar_quasar_proto_rawDescOnce sync.Once
	file_quasar_quasar_proto_rawDescData []byte
)

func file_quasar_quasar_proto_rawDescGZIP() []byte {
	file_quasar_quasar_proto_rawDescOnce.Do(func() {
		file_quasar_quasar_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_quasar_quasar_proto_rawDesc), len(file_quasar_quasar_proto_rawDesc)))
	})
	return file_quasar_quasar_proto_rawDescData
}

var file_quasar_quasar_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_quasar_quasar_proto_goTypes = []any{
	(*QuasarFinalityCertificate)(nil), // 0: quasar.QuasarFinalityCertificate
	(*QuasarPartialSig)(nil),          // 1: quasar.QuasarPartialSig
	(*QuasarKeyRotation)(nil),         // 2: quasar.QuasarKeyRotation
	(*QuasarMisbehaviorEvidence)(nil), // 3: quasar.QuasarMisbehaviorEvidence
	(*QuasarDoubleSignEvidence)(nil),  // 4: quasar.QuasarDoubleSignEvidence
	(*QuasarPrecompRequest)(nil),      // 5: quasar.QuasarPrecompRequest
	(*QuasarPrecompResponse)(nil),     // 6: quasar.QuasarPrecompResponse
}
var file_quasar_quasar_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_quasar_quasar_proto_init() }
func file_quasar_quasar_proto_init() {
	if File_quasar_quasar_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_quasar_quasar_proto_rawDesc), len(file_quasar_quasar_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_quasar_quasar_proto_goTypes,
		DependencyIndexes: file_quasar_quasar_proto_depIdxs,
		MessageInfos:      file_quasar_quasar_proto_msgTypes,
	}.Build()
	File_quasar_quasar_proto = out.File
	file_quasar_quasar_proto_goTypes = nil
	file_quasar_quasar_proto_depIdxs = nil
}
